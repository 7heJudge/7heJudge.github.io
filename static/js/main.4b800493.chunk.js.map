{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","id","to","AboutPage","history","useHistory","onClick","push","TodoForm","addHandler","useState","title","setTitle","value","onChange","event","target","onKeyPress","key","type","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","join","checked","bind","preventDefault","removeHandler","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","window","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b800493.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper teal lighten-2 px1\">\r\n                <a href=\"#\" className=\"brand-logo\">React + TypeScript</a>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/\">Список дел</NavLink></li>\r\n                    <li><NavLink to=\"/about\">Информация</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import {useHistory} from 'react-router-dom';\r\n\r\nexport const AboutPage: React.FC = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <h1>Страница информации</h1>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad aliquid amet cum cumque explicabo\r\n                praesentium, quidem? Ab accusantium delectus et.</p>\r\n            <button className=\"btn\" onClick={() => history.push('/')}>Обратно к списку дел</button>\r\n        </>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\ninterface TodoFormProps {\r\n    addHandler(title: string): void\r\n}\r\n\r\nexport const TodoForm: React.FC<TodoFormProps> = ({addHandler}) => {\r\n    const [title, setTitle] = useState<string>('');\r\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const keyPressHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === 'Enter'){\r\n            addHandler(title);\r\n            setTitle('');\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"input-field mt2\">\r\n            <input value={title} onChange={changeHandler} onKeyPress={keyPressHandler} type=\"text\" id=\"title\"/>\r\n            <label htmlFor=\"title\" className=\"active\">\r\n                Введите название дела\r\n            </label>\r\n        </div>\r\n    )\r\n}","import {ITodo} from \"../interfaces\";\r\n\r\ninterface TodoListProps {\r\n    todos: ITodo[],\r\n    onToggle(id: number): void,\r\n    onRemove(id: number): void\r\n}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({todos, onToggle, onRemove}) => {\r\n    const removeHandler = (event: React.MouseEvent, id: number) => {\r\n        event.preventDefault();\r\n        onRemove(id);\r\n    }\r\n    return (\r\n        <ul>\r\n            {todos.length !== 0 ? todos.map(todo => {\r\n                const classes = ['todo'];\r\n                if (todo.completed) classes.push('completed');\r\n                return (\r\n                    <li className={classes.join(' ')} key={todo.id}>\r\n                        <label>\r\n                            <input type='checkbox' checked={todo.completed} onChange={onToggle.bind(null, todo.id)}/>\r\n                            <span>{todo.title}</span>\r\n                            <i onClick={event => removeHandler(event, todo.id)} className='material-icons red-text'>delete</i>\r\n                        </label>\r\n                    </li>\r\n                )\r\n            }) : <div className='center'>Пока дел нет!</div>}\r\n        </ul>\r\n    )\r\n}","import {TodoForm} from \"../components/TodoForm\";\r\nimport {TodoList} from \"../components/TodoList\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ITodo} from \"../interfaces\";\r\n\r\nexport const TodosPage: React.FC = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    useEffect(() => {\r\n        const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n        setTodos(saved);\r\n    }, [])\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n    const addHandler = (title: string) => {\r\n        const newTodo: ITodo = {\r\n            title,\r\n            id: Date.now(),\r\n            completed: false\r\n        }\r\n        setTodos(prev => [...prev, newTodo])\r\n    }\r\n    const toggleHandler = (id: number) => {\r\n        setTodos(prev => prev.map(todo => {\r\n            if (todo.id === id) return {\r\n                ...todo,\r\n                completed: !todo.completed\r\n            }\r\n            return todo\r\n        }))\r\n    }\r\n    const removeHandler = (id: number) => {\r\n        const tryRemove = window.confirm('Вы уверены что хотите удалить?');\r\n        if (tryRemove) setTodos(prev => prev.filter(todo => todo.id !== id));\r\n    }\r\n    return (\r\n        <>\r\n            <TodoForm addHandler={addHandler}/>\r\n            <TodoList todos={todos} onToggle={toggleHandler} onRemove={removeHandler}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport {Navbar} from \"./components/Navbar\";\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport {AboutPage} from \"./pages/AboutPage\";\nimport {TodosPage} from \"./pages/TodosPage\";\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <div className=\"container\">\n                <Switch>\n                    <Route component={TodosPage} path='/' exact/>\n                    <Route component={AboutPage} path='/about'/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}